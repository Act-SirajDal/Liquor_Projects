import datetime
import os.path
import pandas as pd
import Kaufland_de.db_config as db
import pymysql
today = datetime.datetime.strftime(datetime.date.today(), '%d%m%y')
conn = pymysql.connect(host=db.db_host,user=db.db_user,password=db.db_password,database=db.db_name)
df = pd.read_sql(f"select * from {db.db_data_table}", conn)

# df = pd.read_sql(f"""select * from {db.db_data_table} where product_id in ("363639374",
# "352994750",
# "352994755",
# "352994594",
# "473531523",
# "352997972",
# "351150458",
# "352996632",
# "352995067",
# "387819043",
# "363642543",
# "360558297",
# "333570438",
# "383871319",
# "357309641",
# "61225111",
# "391679362",
# "336416344",
# "345296231",
# "309356713",
# "352995191",
# "363639382",
# "338634245",
# "340380053",
# "347801786",
# "309356442",
# "376120615",
# "449785232",
# "468316936",
# "448935614",
# "338423233",
# "361257203",
# "324181298",
# "340379816",
# "353570837",
# "353570826",
# "353570792",
# "353958826",
# "332738719",
# "352997291",
# "309357364",
# "466365673",
# "347799939",
# "352996595",
# "347800726",
# "347800593",
# "352995136",
# "338147523",
# "352994937",
# "309357685",
# "465727444",
# "471100399",
# "464793094",
# "332739321",
# "420992549",
# "420989741",
# "429364502",
# "356184173",
# "428709482",
# "363699020",
# "376120614",
# "428709383",
# "342270249",
# "312021323",
# "390037286",
# "333951591",
# "420992950",
# "352997321",
# "352995108",
# "408361125",
# "474826760",
# "328683927",
# "468755074",
# "468481489",
# "468461605",
# "420992276",
# "468460689",
# "340380649",
# "468459929",
# "420992206",
# "420992163",
# "466243699",
# "465846498",
# "465844519",
# "390037237",
# "347799201",
# "334764623",
# "469033313",
# "390037123",
# "346993424",
# "350303889",
# "344030221",
# "447260904",
# "358043106",
# "377017343",
# "464793166",
# "415983473",
# "366808339",
# "464793095",
# "357329090",
# "347799232",
# "374610429",
# "315487119",
# "457595236",
# "447260786",
# "309356165",
# "403063607",
# "447260767",
# "344704277",
# "326197894",
# "468461522",
# "418992523",
# "447710319",
# "372581041",
# "425720568",
# "340380195",
# "447295633",
# "461348368",
# "467262052",
# "332715063",
# "465846574",
# "351175617",
# "457642413",
# "346993501",
# "465846483",
# "309356940",
# "437506160",
# "364554751",
# "436424802",
# "428709369",
# "435062347",
# "420992543",
# "420991507",
# "325891516",
# "350826483",
# "309356687",
# "343729729",
# "403063603",
# "353959182",
# "469298027",
# "352998452",
# "352998343",
# "380517672",
# "352998003",
# "332763368",
# "363698722",
# "442976195",
# "332738833",
# "361328553",
# "350826466",
# "421064545",
# "377017350",
# "363474562",
# "363642542",
# "444126124",
# "388845251",
# "408590673",
# "450000830",
# "447260818",
# "340428633",
# "336416367",
# "309358046",
# "356662691",
# "352998107",
# "352997818",
# "352995441",
# "352994787",
# "309356589",
# "340379785",
# "341589160",
# "341502444",
# "324000196",
# "341502440",
# "341502438",
# "333951561",
# "340380231",
# "325065585",
# "353964445",
# "323585149",
# "461055997",
# "347800876",
# "360558313",
# "309356999",
# "309357029",
# "363699055",
# "475114532",
# "346498642",
# "346015835",
# "444998814",
# "366098706",
# "353570839",
# "433527098",
# "362550852",
# "468698458",
# "364220082",
# "420979007",
# "362520210",
# "420978964",
# "428643212",
# "420978958",
# "428643215",
# "428643213",
# "456039963",
# "420992618",
# "447710831",
# "420992102",
# "420991893",
# "367015972",
# "361327616",
# "361257170",
# "405173631",
# "361257124",
# "328695736",
# "353959103",
# "353958879",
# "352997793",
# "352996780",
# "332738700",
# "360558647",
# "352997249",
# "352998489",
# "352995361",
# "352998278",
# "357433650",
# "352996565",
# "415188434",
# "352998090",
# "352997925",
# "352992749",
# "352997824",
# "352995146",
# "352995062",
# "352994953",
# "352994880",
# "352995565",
# "431864130",
# "334490417",
# "312021203",
# "468480500",
# "309357815",
# "355049311",
# "309358244",
# "357329068",
# "334764640",
# "352741984",
# "376809921",
# "438168089",
# "375693675",
# "376772793",
# "346993555",
# "363605600",
# "436786923",
# "435062179",
# "328970581",
# "340428077",
# "309356923",
# "352998141",
# "354772675",
# "366874254",
# "475171295",
# "465728295",
# "465727806",
# "465727337",
# "455554347",
# "453001412",
# "421358147",
# "412071243",
# "411457165",
# "390180992",
# "390179432",
# "390179279",
# "390037996",
# "388845763",
# "376416553",
# "374610423",
# "372712350",
# "363639378",
# "363605586",
# "360558129",
# "351175633",
# "324529226",
# "480853704",
# "474333379",
# "474333364",
# "464793031",
# "352997927",
# "352995303",
# "363622837",
# "346993366",
# "465847458",
# "465847399",
# "465847351",
# "412071252",
# "412071245",
# "361745560",
# "309356924",
# "447710833",
# "388845894",
# "347802374",
# "461853912",
# "372962554",
# "447260930",
# "312021420",
# "312021146",
# "364554750",
# "419253664")""", conn)

path = f"D:\\BACKUP\\HINAL\\DATA\\KAUFLAND\\DE\\{db.month_date}\\"


if not os.path.exists(path):
    os.makedirs(path)
with pd.ExcelWriter(path + f'KAUFLAND_DE_{db.month_date}.xlsx', engine='xlsxwriter',engine_kwargs={"options":{'strings_to_urls': False}}) as writer:
    try:
        # del df['Category_1']
        # del df['Category_2']
        print(len(df))

        df = df.drop('id', axis=1, errors='ignore')
        df['id'] = df.reset_index().index + 1
        df.insert(0, 'id', df.pop('id'))

        df.fillna('NA', inplace=True)
        df.replace('', 'NA', inplace=True)
        df.to_excel(writer, sheet_name='data', index=False,header=True)
        print("FILE GENRATED SUCCESSFULLY.....")
    except:
        print("ERROR GENRATED")
